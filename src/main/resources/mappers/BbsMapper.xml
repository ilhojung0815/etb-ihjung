<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emptybeer.etb.mappers.IBbsMapper">
    <select id="selectBoardById" resultType="com.emptybeer.etb.entities.bbs.BoardEntity">
        SELECT `id`   AS `id`,
               `text` AS `text`
        FROM `etb_bbs`.`boards`
        WHERE BINARY `id` = #{id}
        LIMIT 1
    </select>
    <select id="selectBeerByIndex" resultType="com.emptybeer.etb.vos.BeerVo">
        SELECT `index`                 AS `index`,
               `name`                  AS `name`,
               image                   AS `image`,
               image_type              AS `imageType`,
               mfr                     AS `mfr`,
               calorie                 AS `calorie`,
               volume                  AS `volume`,
               degree                  AS `degree`,
               `description`           AS `description`,
               LEFT(`description`, 68) AS `descriptionShort`,
               category_index          AS `categoryIndex`,
               created_on              AS `createdOn`,
               modified_on             AS `modifiedOn`
        FROM etb_data.beers
        WHERE `index` = #{beerIndex}
    </select>
    <insert id="insertReviewArticle"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.emptybeer.etb.entities.bbs.ReviewArticleEntity">
        INSERT INTO `etb_bbs`.`review_articles` (user_email, beer_index, score, content_good, content_bad, view,
                                                 written_on, modified_on)
        VALUES (#{userEmail}, #{beerIndex}, #{score}, #{contentGood}, #{contentBad}, #{view},
                IFNULL(#{writtenOn}, DEFAULT(`written_on`)),
                IFNULL(#{modifiedOn}, DEFAULT(`modified_on`)))
    </insert>
    <select id="selectReviewByBeerIndex" resultType="int">
        SELECT COUNT(*)
        FROM etb_bbs.review_articles
        WHERE user_email = #{userEmail}
          AND beer_index = #{beerIndex}
    </select>
    <select id="selectReviewArticleCountByBeerIndex"
            resultType="int">
        SELECT COUNT(0)
        FROM etb_bbs.review_articles AS `reviewArticle`
        <if test="criterion != null and criterion.equals('nickname')">
            LEFT JOIN `etb_member`.`users` AS `user` ON `reviewArticle`.`user_email` = `user`.`email`
        </if>
        WHERE beer_index = #{beerIndex}
        <if test="criterion != null and criterion.equals('content')">
            AND (REPLACE(reviewArticle.`content_good`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(reviewArticle.`content_bad`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%'))
        </if>
        <if test="criterion != null and criterion.equals('nickname')">
            AND BINARY `user`.nickname = #{keyword}
        </if>
    </select>
    <select id="selectReviewArticleByBeerIndex"
            resultType="com.emptybeer.etb.vos.ReviewArticleVo">
        SELECT `reviewArticle`.`index` AS `index`,
        `reviewArticle`.user_email AS `userEmail`,
        `reviewArticle`.board_id AS `boardId`,
        `reviewArticle`.score AS `score`,
        `reviewArticle`.`content_good` AS `contentGood`,
        `reviewArticle`.`content_bad` AS `contentBad`,
        `reviewArticle`.view AS `view`,
        `reviewArticle`.written_on AS `writtenOn`,
        `reviewArticle`.modified_on AS `modifiedOn`,
        `user`.`nickname` AS `usernickname`
        FROM etb_bbs.review_articles AS `reviewArticle`
        LEFT JOIN `etb_member`.`users` AS `user` ON `user`.`email` = `reviewArticle`.`user_email`
        WHERE `reviewArticle`.`beer_index` = #{beerIndex}
        <if test="criterion != null and criterion.equals('content')">
            AND (REPLACE(reviewArticle.`content_good`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(reviewArticle.`content_bad`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%'))
        </if>
        <if test="criterion != null and criterion.equals('nickname')">
            AND BINARY `user`.nickname = #{keyword}
        </if>
        GROUP BY `reviewArticle`.`index`
        ORDER BY `reviewArticle`.`index` DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>
    <insert id="insertBeerLike"
            parameterType="com.emptybeer.etb.entities.data.BeerLikeEntity">
        INSERT INTO etb_data.beer_likes (`user_email`, `beer_index`, `created_on`)
        VALUES (#{userEmail}, #{beerIndex}, IFNULL(#{createdOn}, DEFAULT(`created_on`)))
    </insert>
    <delete id="deleteBeerLike"
            parameterType="com.emptybeer.etb.entities.data.BeerLikeEntity">
        DELETE
        FROM etb_data.beer_likes
        WHERE user_email = #{userEmail}
          AND `beer_index` = #{beerIndex}
        LIMIT 1
    </delete>
</mapper>